[buildout]
# O aquivo abaixo contém uma listagem de todos os pacotes
# basicos usados pelo plone.
extends =
    http://dist.plone.org/release/4.3/versions.cfg

# Aqui listamos os repositórios de pacotes, caso conheça
# algum e seja realmente necessário usá-lo adicione aqui
find-links =
    http://simplesnet.com.br/pacotes/catalogo/simple
    http://dist.plone.org/thirdparty/
    http://dist.plone.org/release/4.3

# Lista de ovos a serem instalados no Plone ou no ambiente
# liste 1 pacote por linha, estes pacotes devem estar presentes
# em um dos repositórios acima **find-links** ou no repositporio
# padrão usado pelos buildouts **pypi.python.org**
eggs =
     Pillow
     elementtree

# Existem pacotes que necessitam ser incluídos aqui, mas na maior
# parte das vezes não é necessário, então não se preocupe com este
# espaço, a não ser que no README do pacote diga para coloca-lo aqui
zcml = 

unzip = true
versions = versions
sources = sources

# Com essa extenção podemos fazer download de pacotes que ainda
# Estão em desenvolvimento, seja do git, svn mercurial e etc.
# Para usar ele é necessário especificar o pacote na sessão [sources]
extensions +=
    mr.developer

# Aqui podemos listar os pacotes que devem ser baixados de seus
# respectivos repositórios, este é um complemento da extenção do
# mr.developer, usando * iremos trazer todos os pacotes listados
# na sessão [sources]
auto-checkout = *

# Caso você tenha um pacote que ainda não é um ovo, ou que ainda
# não está no controle de versão, você poderá expecificar o caminho
# aqui ex. develop = src/meu.produto
# após informar o produto aqui, ele também precisa ser informado na sessão
# eggs.
develop =
#   src/meu.produto


# Aqui são as partes (sessões) que devem ser lidas e executadas quando
# o buildout for executado.
parts =
    instance
    mkdir-chameleon

# Caso necessite especificar uma versão de algum pacote
[versions]
buildout-versions = 1.7
setuptools = 0.6c11

# Aqui é onde a mágica acontece, essa sessão irá criar o script dentro da pasta
# bin com o nome de instance **bin/instance**, aqui você poderá informar a porta
# que sua instância de Plone irá ser executada, por padrão usamos 8080
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode=off
environment-vars = 
    zope_i18n_compile_mo_files true
    RELOAD_PATH ${buildout:directory}/src/
    CHAMELEON_CACHE ${buildout:directory}/var/chameleon-cache
    CHAMELEON_DEBUG false
    CHAMELEON_RELOAD true
    CHAMELEON_EAGER true 
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    PTS_LANGUAGES en, pt-br
    zope_i18n_allowed_languages en, pt_BR
    TEMP ${buildout:directory}/var/tmp
    TMP ${buildout:directory}/var/tmp
eggs =
    Plone
    plone.app.upgrade
    ${buildout:eggs}
zcml =
    ${buildout:zcml}

# Será criada uma pasta para manter o cache de arquivos Python gerados pelo
# chameleon, estes arquivos podem ser deletado em algum momento por você mesmo
# para limpeza dessa primeira camada de cache.
[mkdir-chameleon]
recipe = plone.recipe.command
command =
    mkdir -p ${buildout:directory}/var/chameleon-cache
    rm -Rf ${buildout:directory}/var/chameleon-cache/*
update-command = ${:command}

################################################
#   Aqui as sessões responsáveis por listar os #
#   repositporios e pacotes disponíveis para   #
#   desenvolvimento, que serão usados pelo     #
#   pacote mr.developer                        #
################################################

[remotes]
collective = git@github.com:collective
plone = git@github.com:plone
simples_github = git@github.com:simplesconsultoria
simples_bitbucket = git@bitbucket.org:simplesconsultoria

[sources]
collective.cover = git ${remotes:collective}/collective.cover.git
#sc.galleria.support = git ${remotes:simples_github}/sc.galleria.support.git
#sc.social.like = git ${remotes:collective}/sc.social.like.git
